@page "/server/console"
@inject ConsoleService _consoleService;
@inject JSRuntimeService _jsRuntime;
<PageTitle>Console</PageTitle>

<MudGrid>
    <MudPaper Width="100%" Height="400px" Style="overflow-y: scroll" id="console">
        @foreach (var log in _consoleService.Logs)
        {
            <MudText>@log</MudText>
        }
    </MudPaper>
    <EditForm Model="@_model" OnValidSubmit="OnValidSubmit" style="width:100%">
        <MudItem>
            <MudTextField FullWidth @bind-Value="_model.Command" For="@(() => _model.Command)" id="consoleCommandInput" />
        </MudItem>
    </EditForm>
</MudGrid>

@code {
    private CommandFormModel _model = new CommandFormModel();
    private class CommandFormModel
    {
        public string Command { get; set; } = "";
    }

    private void OnValidSubmit(EditContext context)
    {
        var command = ((CommandFormModel)context.Model).Command;
        if (!string.IsNullOrEmpty(command))
        {
            _consoleService.Submit(command);
            _model = new CommandFormModel();
            StateHasChanged();
        }
    }

    protected override void OnAfterRender(bool firstRender)
    {
        _jsRuntime.ScrollToEnd("console");
        _jsRuntime.FocusElement("consoleCommandInput");
    }
}