@page "/realmGuiInitialize"
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Components.Web;
@using RealmCore.Server.Interfaces;
@using RealmCore.Server.Services;
@using System.Security.Claims;
@attribute [RenderModeInteractiveServer]
@inject IHttpContextAccessor _httpContextAccessor;
@inject IRealmServer _realmServer;
@inject NavigationManager _navigationManager;

@code{
    protected override async Task OnInitializedAsync()
    {
        var browserGuiService = _realmServer.GetRequiredService<IBrowserGuiService>();
        if (_httpContextAccessor.HttpContext == null || !_httpContextAccessor.HttpContext.Request.Query.TryGetValue(browserGuiService.KeyName, out var key))
            return;

        var claims = new List<Claim>
        {
            new Claim(browserGuiService.KeyName, key.ToString()),
        };

        var identity = new ClaimsIdentity(claims, "Cookies");
        var principal = new System.Security.Principal.GenericPrincipal(identity, null);
        await _httpContextAccessor.HttpContext.SignInAsync("Cookies", principal);
        if (_httpContextAccessor.HttpContext.User.Identity?.IsAuthenticated ?? false)
        {
            if(browserGuiService.TryGetPlayerByKey(key.ToString() ?? string.Empty, out var player))
            {
                _navigationManager.NavigateTo("/realmGuiInitialized");
            }
            else
            {
                _navigationManager.NavigateTo("/realmGuiInitializeNotAllowed");
            }
        }
    }
}